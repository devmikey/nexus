/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface GpPatient {
      'access_token': string;
      'nhsnumber': string;
      'odscode': string;
      'token_type': string;
    }
  }

  interface HTMLGpPatientElement extends StencilComponents.GpPatient, HTMLStencilElement {}

  var HTMLGpPatientElement: {
    prototype: HTMLGpPatientElement;
    new (): HTMLGpPatientElement;
  };
  interface HTMLElementTagNameMap {
    'gp-patient': HTMLGpPatientElement;
  }
  interface ElementTagNameMap {
    'gp-patient': HTMLGpPatientElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'gp-patient': JSXElements.GpPatientAttributes;
    }
  }
  namespace JSXElements {
    export interface GpPatientAttributes extends HTMLAttributes {
      'access_token'?: string;
      'nhsnumber'?: string;
      'odscode'?: string;
      'token_type'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface GprecordComponent {
      'access_token': string;
      'nhsnumber': string;
      'odscode': string;
      'recordtype': string;
      'token_type': string;
    }
  }

  interface HTMLGprecordComponentElement extends StencilComponents.GprecordComponent, HTMLStencilElement {}

  var HTMLGprecordComponentElement: {
    prototype: HTMLGprecordComponentElement;
    new (): HTMLGprecordComponentElement;
  };
  interface HTMLElementTagNameMap {
    'gprecord-component': HTMLGprecordComponentElement;
  }
  interface ElementTagNameMap {
    'gprecord-component': HTMLGprecordComponentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'gprecord-component': JSXElements.GprecordComponentAttributes;
    }
  }
  namespace JSXElements {
    export interface GprecordComponentAttributes extends HTMLAttributes {
      'access_token'?: string;
      'nhsnumber'?: string;
      'odscode'?: string;
      'recordtype'?: string;
      'token_type'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface GprecordPanel {
      'section': string;
    }
  }

  interface HTMLGprecordPanelElement extends StencilComponents.GprecordPanel, HTMLStencilElement {}

  var HTMLGprecordPanelElement: {
    prototype: HTMLGprecordPanelElement;
    new (): HTMLGprecordPanelElement;
  };
  interface HTMLElementTagNameMap {
    'gprecord-panel': HTMLGprecordPanelElement;
  }
  interface ElementTagNameMap {
    'gprecord-panel': HTMLGprecordPanelElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'gprecord-panel': JSXElements.GprecordPanelAttributes;
    }
  }
  namespace JSXElements {
    export interface GprecordPanelAttributes extends HTMLAttributes {
      'section'?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
